# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
  language:
    strict-casts: true
    strict-raw-types: true
  errors:
    invalid_annotation_target: ignore

linter:
  rules:
    - always_declare_return_types
    - annotate_overrides
    - avoid_empty_else
    - avoid_print
    - avoid_redundant_argument_values
    - avoid_relative_lib_imports
    - avoid_returning_null_for_future
    - avoid_type_to_string
    - avoid_unused_constructor_parameters
    - cancel_subscriptions
    - directives_ordering
    - empty_catches
    - empty_constructor_bodies
    - library_private_types_in_public_api
    - no_leading_underscores_for_local_identifiers
    - null_check_on_nullable_type_parameter
    - prefer_const_constructors
    - prefer_const_declarations
    - prefer_final_fields
    - prefer_final_locals
    - prefer_interpolation_to_compose_strings
    - prefer_relative_imports
    - prefer_single_quotes
    - sort_child_properties_last
    - unawaited_futures
    - unnecessary_lambdas
    - unnecessary_parenthesis
    - unnecessary_string_interpolations
    - use_key_in_widget_constructors

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
