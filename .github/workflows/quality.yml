name: Quality Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  FLUTTER_VERSION: '3.22.3'
  MIN_COVERAGE: 80

jobs:
  analyze_and_test:
    name: Analyze & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true

      - name: Cache pub dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
            build
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --set-exit-if-changed .

      - name: Analyze code
        run: flutter analyze --fatal-infos

      - name: Run tests with coverage
        run: |
          flutter pub global activate coverage
          flutter test --coverage --no-pub

      - name: Check test coverage
        run: |
          flutter pub global activate check_coverage
          flutter pub run check_coverage:check_coverage coverage/lcov.info $MIN_COVERAGE

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

      - name: Performance Analysis
        run: |
          flutter pub global activate flutter_performance_tools
          flutter pub run flutter_performance_tools:analyze

      - name: Check App Size
        run: |
          flutter build apk --analyze-size
          flutter build ios --analyze-size

      - name: Upload Performance Report
        uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: build/performance/
          retention-days: 7

      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const coverage = fs.readFileSync('coverage/lcov.info', 'utf8');
            const perfReport = fs.readFileSync('build/performance/report.json', 'utf8');
            
            const comment = `## Quality Report
            ### Test Coverage: ${coverage}
            ### Performance Impact: ${perfReport}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
